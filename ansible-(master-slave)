1. Servers creation. 
   * cerate "5-servers" (1-ansible, 2-dev_servers, 2-test_server).
   * passwd root                                                        // set password for root user.
 
2. Do all servers.
  * vim /etc/ssh/sshd_config  (38,61)-uncommit                         // giving root_user login permmisions.
  * systemctl restart sshd                                             // restart sshd (mandatory).        
  * systemctl status sshd
  * hostname -i                                                        // showing private_id.

3. Do ansible server only.
   amazon-linux-extras install ansible2 -y                             // install ansible.
   yum install python3 python-pip python-dlevel -y                     

4. Do ansible sever only.
  * vim /etc/ansible/hosts                                  // go to ansible inventory file (or) path.
   [dev]  (Do-12-line)                                      // adding ip_adderses inventory file (or) path.
    private ip-adderss of "dev_server-1"
    private ip-adderss of "dev_server-2"
   [test]      "
    private ip_adderss of "test_server-1"
    private ip-adderss of "test_server-2"

5. Do ansible server only. 
   * ssh-keygen ---> Do-Enter "4-times".               // generating a new key.
   * ll .ssh/                                          // showing keys (id_rsa, id_rsa.pub).
   * ssh-copy-id root@ip_address of dev-server         // copying keys from ansible-server to dev-server (mandatory).     
   * ssh "paste ip-adderss of "dev-server"             // connection complete ansible to dev.
     ["Do all ip's same for connection"].

=============================================================== [FRENTEND-CODE DEPLOYMENT] =====================================================================================================
1. Do ansible server.                                                           
vim deploy.yml
- hosts: all
  tasks:
    - name: installing httpd
      yum: name=httpd state=present

    - name: starting httpd
      service: name=httpd state=started

    - name: installing git
      yum: name=git state=present

    - name: checkout
      git:
        repo: https://github.com/MASTHAN55/netflix-clone.git
        dest: /var/www/html

* ansible-playbook deploy.yml
* if we can see netflix files it's done.
* copy public-ip, paste on broswer.

===================================================================== [BACKEND-CODE DEPLOYMENT] =====================================================================
1. Setup tomcat [Do slave server]. 
  * vim tomcat.yml         [create]
  * vim tomcat-users.xml   [create] 
  * vim context.xml        [create]
  * ansible-playbook tomcat.yml 
  
2. jenkins inastallation. [Do ansible-server]
  * install jenkins [jenkins.sh]
  * install "ansible and stage view" pluggens.
      ---> go to tools --> ansible (name= ansible, path to ansible executables directory= /usr/bin).

3. create pipeline

  pipeline {
    agent any

    stages {
        stage('checkout') {
            steps {
                git 'https://github.com/MASTHAN55/jenkins-java-project-1.git'
              
            }
        }
        stage('build') {
            steps {
                sh 'mvn compile'
            }
        }
        stage('test') {
            steps {
                sh 'mvn test'
            }
        }
        stage('artifact') {
            steps {
                sh 'mvn package'
            }
        }
    }
}
vim deploy.yml
- hosts: all
  tasks:
    - name: deplpy
      copy:
        src: /var/lib/jenkins/workspace/pipeline/target/netflix-1.2.0.war
        dest: /root/tomcat/webapps




   
    

















